<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Freshbrew</title>
    <link>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/</link>
    <description>Recent content on Freshbrew</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>et</language>
    <copyright>CC BY-NC-SA 2016</copyright>
    <lastBuildDate>Tue, 27 Sep 2016 00:34:41 +0300</lastBuildDate>
    <atom:link href="#ZgotmplZ" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The Old Empty</title>
      <link>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/post/the-old-empty/</link>
      <pubDate>Tue, 27 Sep 2016 00:34:41 +0300</pubDate>
      
      <guid>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/post/the-old-empty/</guid>
      <description>&lt;p&gt;The Old Empty! The man is quite a character. He introduces bugs into software. He stirs up egos, often resulting in complete breakdown in organisation&amp;rsquo;s communications. He is largely responsible for loss of direction in systems development projects. He is a spy. He is trickster. He&amp;rsquo;s a whistleblower. But don&amp;rsquo;t listen to his whistle - it&amp;rsquo;s a false one. When he enters the room, silently, nobody pays attention to him. Vaguely smiling, he stands in the corner. Never speaking, he lets others argue and discuss. He attents all our meetings. He proofreads our reports. He&amp;rsquo;s present in private conversations. He&amp;rsquo;s a key member of senior management board. He volunteers for corporate retreats. And when the meeting ends, people leaving the room, he&amp;rsquo;s still smiling, now grinning. Time has been wasted, money has been wasted, brains have been wasted. And people feel exhausted - wasted. Oftentimes, he&amp;rsquo;s the smartest guy in the room.&lt;/p&gt;

&lt;p&gt;Whatever, but you cannot complain that this man lacks vision. He&amp;rsquo;s got lots of it. Always very open-minded and responsive to everything new, he&amp;rsquo;s a vocal supporter of the latest IT trends.&lt;/p&gt;

&lt;p&gt;The Old Empty, we Estonians call him Vanatühi in our language, is ardent supporter of agile development. He joins programmers to practice pair programming. He&amp;rsquo;s busy shuffling tasks on Kanban boards. He can even do agile and waterfall at the same time. And when you unzip the big file the developer sent you - the project deliverables - and it&amp;rsquo;s basically empty, only a handful documents of errant babble and some cryptic code files, when you know The Old Empty has been working there too.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rohkem ratsionaalsust</title>
      <link>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/post/rohkem-ratsionaalsust/</link>
      <pubDate>Tue, 20 Sep 2016 21:35:08 +0300</pubDate>
      
      <guid>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/post/rohkem-ratsionaalsust/</guid>
      <description>

&lt;h4 id=&#34;mõisted&#34;&gt;Mõisted&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lahendus&lt;/strong&gt; - tarkvara, IT süsteem või teenus, samuti IT-ga seotud artefakt või artefaktide kogum, millel on mingi kasutusväärtus ja mille loomiseks on vaja IT arendustööd (edaspidi - &amp;ldquo;tööd&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ülesandepüstitus&lt;/strong&gt; - määratleb probleemi(d) või vajaduse(d), mida lahendus peab lahendama, loodava lahenduse eesmärgi(d), kõige olulisemad teadaolevad jooned ja piirangud (nõuded) ning annab suunised lahenduse loomisele (teostamisele)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;spetsifikatsioon&lt;/strong&gt; - üheselt tõlgendatav, detailne ja kõikehõlmav ülesandepüstitus&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;arendustöö&lt;/strong&gt; - ülesandepüstitusest lähtuv, lahenduse loomisele suunatud tegevus&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;loominguline arendustöö&lt;/strong&gt; - töö, mis nõuab mittetriviaalsete probleemide lahendamist, eksperthinnangute andmist, loomingulist mõtlemist jms&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;spetsifitseeritud arendustöö&lt;/strong&gt; - spetsifikatsiooni järgi tehtav arendustöö&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ressurss&lt;/strong&gt; - inimtöö, nii majasisese kui ka väljast hangitava, kulutus&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;kosemudel&lt;/strong&gt; - arendusviis, kus ülesandepüstitus töö käigus ei muutu&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;agiilne arendus&lt;/strong&gt; - arendusviis, kus ülesande püstitamine ja arendustöö vahelduvad&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;ratsionaalse-ülesandepüstitamise-põhimõtted&#34;&gt;Ratsionaalse ülesandepüstitamise põhimõtted&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;Suuremaid töid ei võeta ette ilma selge ülesandepüstituseta.&lt;/li&gt;
&lt;li&gt;Ülesandepüstituse koostamine on omaette töö. Selles võib eristada nõuete (eesmärgide ja piirangute) väljaselgitamist,  sõnastamist, kokkukogumist, prioritiseerimist, vastuolude väljaselgitamist, kompromisside otsimist jms.&lt;/li&gt;
&lt;li&gt;Ülesandepüstitamisel üritatakse varakult kaasata kõik osapooled, kes oluliste nõuete (eesmärkide ja piirangute) püstitamisel võiksid kaasa rääkida.&lt;/li&gt;
&lt;li&gt;Ülesandepüstitamisel püütakse vältida &lt;em&gt;design by committee&lt;/em&gt; jms ebasoovitavaid grupidünaamilisi nähtusi.&lt;/li&gt;
&lt;li&gt;Ülesandeid ei püstitata lahus realistlikust vaatest kasutatavatele ressurssidele.&lt;/li&gt;
&lt;li&gt;Ülesannete püstitamisel pürgitakse tasakaalustatusele (ka selles lõikes, et projektiportfellis on nii kõrgema kui ka madalama riskitasemega projekte).&lt;/li&gt;
&lt;li&gt;Ülesannete püstitamisel võetakse arvesse arendusega paratamatult kaasas käivat määramatust.&lt;/li&gt;
&lt;li&gt;Määramatuse riski vähendamiseks kasutatakse - vastavalt olukorrale ja võimalustele - nii &lt;em&gt;up-front&lt;/em&gt; ettevalmistavaid tegevusi (kosemudelis) kui ka agiilseid praktikaid.&lt;/li&gt;
&lt;li&gt;Ülesandepüstitamisel arvestatakse nii täitjariski kui ka ülesande laadi. Madala täitjariskiga, loominguliste ülesannete püstitused tehakse minimaalsed; kõrge täitjariskiga, madala loomingulisusega ülesanded seevastu spetsifitseeritakse detailselt.&lt;/li&gt;
&lt;li&gt;Tehakse vahet eesmärgi ja vahendi vahel.&lt;/li&gt;
&lt;li&gt;Ressursikohustumisi (ingl &lt;em&gt;resource commitment&lt;/em&gt;) võetakse konservatiivselt. Vajadusel tehakse eelanalüüse või võetakse muid valikuvõimalusi jätvaid, tootjalukke jm sundseise vältivaid meetmeid.&lt;/li&gt;
&lt;li&gt;Otsusi ei tehta kiirustades ja uisapäisa; enne otsuse tegemist küsitakse, kas otsuse tegemiseks vajalikud andmed on koos ja kas otsuse tegemiseks õige aeg on käes.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;nõuete-liigid&#34;&gt;Nõuete liigid&lt;/h4&gt;

&lt;p&gt;Nõuete väljaselgitamisel peab nõudeid kriitiliselt hindama. Väheolulised, asjasse mittepuutuvad, &lt;em&gt;pro forma&lt;/em&gt; ja selge omanikuta nõuded ei kuulu ülesandepüstitusse. Alljärgnev nõuete liigitus võib olla kasuks nõuete kriitilisel uurimisel.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Eesmärke püstitavad nõuded (&amp;ldquo;eesmärknõuded&amp;rdquo;).

&lt;ul&gt;
&lt;li&gt;Eesmärknõudeid ei tohi olla liiga palju. Lahendust, mis peab täitma paljusid erinevaid eesmärke, on raske projekteerida ja teostada. Eesmärknõuete paljusus viitab vajadusele ülesandepüstitus dekomponeerida alam- või hoopis eraldiseisvateks ülesanneteks.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Piiranguid seadvad nõuded (&amp;ldquo;piirangnõuded&amp;rdquo;).

&lt;ul&gt;
&lt;li&gt;Ükski lahendus ei teki täiesti tühjale kohale. Piirangud tulenevad tulevase lahenduse keskkonna tehnostruktuurist, organisatsioonilisest kontekstist jms.&lt;/li&gt;
&lt;li&gt;Suuri süsteeme ehitatakse järk-järgult. Seetõttu seavad tihti piiranguid varem tehtud tehnoloogilised valikud.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Tuletatud&amp;rdquo; nõuded

&lt;ul&gt;
&lt;li&gt;Nõuded, mis on loogiliselt tuletatavad teistest nõuetest ja kontekstist. Nõuded, milleni mõistliku hoolsusega tegelev, vähemalt keskmiselt pädev projekteerija jõuaks ka iseseisvalt, lähtudes eesmärknõuetest.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Hariduse ja kompetentsi puudujääkide likvideerimisele suunatud nõuded

&lt;ul&gt;
&lt;li&gt;Nt &amp;ldquo;Pikema dokumendi (3 lk või rohkem) koosseisus peab olema sisukord&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Fallacy&lt;/em&gt;, et tööd saab kvaliteetselt teha ka madala haridustasemega, nõrkade intellektuaalsete ja tahteliste omadustega täitjatega, kui vaid kehtestada üksikasjalikud nõuded.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Tehtud valikutest teada andvad nõuded

&lt;ul&gt;
&lt;li&gt;Nt &amp;ldquo;Liides tuleb teostada SOAP stiilis&amp;rdquo;. Liidest võib teostada kas REST või SOAP stiilis. Oletame, et vahet pole. Kuid otsus on tehtud. Valikud võivad olla kaalutlustest tulenevad või kokkuleppelised, konventsionaalsed (ingl &lt;em&gt;by convention&lt;/em&gt;). Näiteks parem- või vasakpoolse liikluse valik on kokkuleppe küsimus.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Tellija kaitsele suunatud nõuded

&lt;ul&gt;
&lt;li&gt;Nõuded, mis sõnastatakse eelkõige selleks, et kaitsta end võimalikes vaidlustes ja paremini motiveerida lepingute täitjaid.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Pro forma&lt;/em&gt; nõuded

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Ülevaltpoolt&amp;rdquo; etteantud nõuded, mille mõistlikkus või eesmärk pole selge, kuid mida tuleb täita.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Omanikuta nõuded

&lt;ul&gt;
&lt;li&gt;Nõuded, mille allikas on kadunud. Loomulikult tuleb sellised nõuded kriitiliselt üle vaadata ja vajadusel eemaldada.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Nn &amp;ldquo;jalgrattakuurinõuded&amp;rdquo;

&lt;ul&gt;
&lt;li&gt;Nõuded, mis tegelikult ei ole väga olulised, kuid mida inimesed esitavad oma kompetentsuse väljanäitamiseks. Vt &lt;a href=&#34;https://en.wikipedia.org/wiki/Law_of_triviality&#34;&gt;https://en.wikipedia.org/wiki/Law_of_triviality&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Enneaegsed nõuded

&lt;ul&gt;
&lt;li&gt;Nõuded, mis tegelikult peaksid olema lahenduse osad ja tekkimise õige aeg oleks alles lahenduse väljatöötamise käigus.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;probleemid&#34;&gt;Probleemid&lt;/h4&gt;

&lt;p&gt;Rohkem ratsionaalsust ülesannete püstitamisel aitaks vältida nii mõndagi sageliesinevat IT-probleemi. Ülaltoodud põhimõtteid võib edukalt kasutada:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;käsitlusala laialivalgumise vältimiseks projektides (ingl &lt;em&gt;scope creep&lt;/em&gt;). Vrdl &lt;a href=&#34;https://en.wikipedia.org/wiki/Scope_creep&#34;&gt;https://en.wikipedia.org/wiki/Scope_creep&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;triivimise ja ringiekslemise vältimiseks (projektitriiv, ingl &lt;em&gt;project drift&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;funktsioonikuhje vältimiseks toodetes ja süsteemides (ingl &lt;em&gt;function creep&lt;/em&gt;, &lt;em&gt;feature creep&lt;/em&gt;).&lt;/li&gt;
&lt;li&gt;kellade-vilede tellimise vältimiseks.&lt;/li&gt;
&lt;li&gt;arendusprojektide ettepanekute hindamise ja valiku erinevates etappides läbipaistvuse, kommunikatsiooni ja otsuste kvaliteedi tõstmiseks.&lt;/li&gt;
&lt;li&gt;“ägedate lahenduste” tellimisega hooguminemise vältimiseks.&lt;/li&gt;
&lt;li&gt;küsimuse &amp;ldquo;miks me seda üldse teeme (tegime)?&amp;rdquo; tööde käigus või töö lõpus tekkimise vältimiseks.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Ajakohasena hoidmine</title>
      <link>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/post/ajakohasena-hoidmine/</link>
      <pubDate>Mon, 12 Sep 2016 21:35:08 +0300</pubDate>
      
      <guid>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/post/ajakohasena-hoidmine/</guid>
      <description>&lt;p&gt;Mõtleme - õigemini ei mõtle, vaid usume - et arendajalt vastu võetud, akteeritud ja tööle rakendatud tarkvara on täielikult dokumenteeritud ja dokumentatsioon on ajakohane. Kahjuks näitab praktika, et sellist eeldust ei saa teha.&lt;/p&gt;

&lt;p&gt;Tõenäosus, et dokumentatsioon vastab tegelikule koodile, on üldiselt väike. Ajakohasus võib käest libiseda erinevatel põhjustel. Tööd oli vaja vastu võtta. Kõike ei jõutud dokumenteerida. Arvati, et dokumenteeritakse siis, kui suur kiire käikulaskmisega on möödas. Tarkvara töölepanemisel tehti veel vajalikke kohandusi. Nende korralikuks dokumenteerimiseks ei olnud käepärast ei inimesi ega aega. Jne. Põhjusi on palju.&lt;/p&gt;

&lt;p&gt;Dokument, mis ei ole ajakohane, ei ole kvaliteetne. Ebakvaliteetsele dokumentatsioonile on aga raske või võimatu peale ehitada.&lt;/p&gt;

&lt;p&gt;Tarkvara haldajal võib olla tarkvara kvaliteedist - sh dokumentatsiooni kvaliteedist - vaid ähmane ettekujutus. Teadmata dokumentatsiooni tegelikku kvaliteeti planeeritakse tarkvara edasiarendustöö. Töö käigus selgub, et dokumentatsioon on puudulik. Ümber mängida - nt täiendamise asemel hoopis ringi kirjutada - on aga juba võimatu.&lt;/p&gt;

&lt;p&gt;Olemasoleva tarkvara edasiarendamine on seetõttu riskantne ettevõtmine. Edasiarendaja võib ootamatult seista ebameeldiva valiku ette: kas hakata energiat ja aega kulutama olemaoleva dokumentatsiooni paremasse seisundisse viimisele (koodi, selle käitumise ja dokumentatsiooni üksteisega vastavuse uurimisele) või piirduda oma osa dokumenteerimisega, täielikult mõistmata, mis tarkvaras tervikuna toimub. Viimasel juhul kaob dokumentatsiooni terviklikus ja garantiid edasiarenduse kvaliteedi kohta anda ei saa.&lt;/p&gt;

&lt;p&gt;Millised tunnused võivad anda märku dokumentatsiooni ajakohasusest?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Kas keegi hooldab dokumenti? Kui ei ole teada, siis on suur tõenäosus, et dokument ei ole ajakohane.&lt;/li&gt;
&lt;li&gt;Millal viimati dokumenti muudeti ja mis laadi see muutus oli? Dokument, millest ei nähtu, millal viimane muutmine toimus ja mida muudeti, tõenäoliselt ei ole ajakohane.&lt;/li&gt;
&lt;li&gt;Milline on dokumendi hooldustsükkel? Ajakohane on dokument, mida pidevalt või vähemalt regulaarselt &amp;ldquo;hooldatakse&amp;rdquo;. Tänapäeval peab see tsükkel olema päris lühike. Pika läbivaatusperioodi seadmine võib olla enesepettus: rahustatakse end, et strateegia, protsessi või töövoo kirjeldus vaadatakse läbi kaks korda aastas, dokumentatsiooni ajakohastatakse iga arendusprojekti lõpus jne. Tegelikult toimuvad muutused kogu aeg.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tihti alahinnatakse ajakohasuse hoidmise kulu. Mahuka dokumentatsiooni ajakohasena hoidmiseks ei jätku lihtsalt ressursse.&lt;/p&gt;

&lt;p&gt;Mida siis teha?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Inimene jõuab pidevalt ajakohasena, hea korras hoida vaid väikest arvu dokumente. Võib-olla ainult 3-4, mitte enamat. Loobuda soovmõtlemisest, et inimesed suudavad enamat.&lt;/li&gt;
&lt;li&gt;Üks ilmne olukorra parendamise tee on dokumentide arvu ja mahu vähendamine.&lt;/li&gt;
&lt;li&gt;Teiseks, prioritiseerimine: leida väike arv võtmetähtsusega dokumente, mida siis üritada iga hinna eest ajakohasena hoida.&lt;/li&gt;
&lt;li&gt;Kolmandaks, &amp;ldquo;vaid ühes kohas&amp;rdquo; põhimõtte rakendamine. Ajakohasus kaob eriti kiiresti siis, kui teabest tekib mitu koopiat või esitust.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>A, B ja C</title>
      <link>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/post/a-b-ja-c/</link>
      <pubDate>Wed, 07 Sep 2016 21:35:08 +0300</pubDate>
      
      <guid>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/post/a-b-ja-c/</guid>
      <description>&lt;p&gt;Probleeme (töid) tuleb prioritiseerida: A, B ja C kategooria probleemid. A kategooria inimest ei tohi panna lahendama C kategooria probleemi. Tihti aga nii tehakse. Tulemuseks on ebaefektiivne ressursikasutus. See ei ole jätkusuutlik, ei nii ülesande andja kui ka inimese enda suhtes.&lt;/p&gt;

&lt;p&gt;Hea mõte ei ole ka panna C kategooria inimene lahendama A kategooria probleemi. Tulemuseks on pusimine või ei saa inimene üldse aru, mis suunas minna.&lt;/p&gt;

&lt;p&gt;B kategooria inimesed lahendagu B kategooria probleeme.&lt;/p&gt;

&lt;p&gt;Ülaltoodu võib näida arrogantsusena, elitismina või millegi veel hullemana. Kuid probleemid on erinevad ja erinevad on ka inimeste võimed ühel või teisel alal probleeme lahendada.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Inimeste katkiminekust</title>
      <link>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/post/inimeste-katkiminekust/</link>
      <pubDate>Tue, 30 Aug 2016 19:48:10 +0300</pubDate>
      
      <guid>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/post/inimeste-katkiminekust/</guid>
      <description>&lt;p&gt;Projektijuhil on kaht liiki alluvaid: a) oma asutuse töötajad; b) arenduspartneri töötajad. Kuidas ta saab neid motiveerida?&lt;/p&gt;

&lt;p&gt;Motivatsioonitegurid on täiesti erinevad.&lt;/p&gt;

&lt;p&gt;[Räägime siis tellijapoolsest projektijuhist - arendustööde sisseostmise kontekstis]&lt;/p&gt;

&lt;p&gt;Arenduspartneri töötajatelt saab nõuda inimlikult, nagu IT-spetsialist IT-spetsialistilt jms. Siiski on kogu aeg taustal leping. Nõuda saab  lepingu alusel.&lt;/p&gt;

&lt;p&gt;Kuid päris suur osa arendusest on intellektuaalne töö. Intellektuaalset tööd on raske up-front spetsifitseerida. Lepingus peab töö - jutt on siis mitte mehhaanilisest, vaid intellektuaalsest tööst - olema spetsifitseeritud täielikult, kõikehõlmavalt ja objektiivset vastavuskontrolli võimaldava detailsusega. Waterfall-arenduses üritatakse seda saavutada, kuid tihti ebaõnnestutakse.&lt;/p&gt;

&lt;p&gt;Mida siis tehakse? Projektijuht ei saa piirduda üldiste formuleeringutega &amp;ldquo;ei meeldi&amp;rdquo;, &amp;ldquo;kole&amp;rdquo;, &amp;ldquo;kehv töö&amp;rdquo; jne. Ta saab nõuda asja parandamist ainult siis, kui tal on lauale käia lepingu tekstist tulenev kindel argumentatsioon oma väite toetuseks. (Muidugi võib ta bluffida - kui mitte kaua).&lt;/p&gt;

&lt;p&gt;Ainus lootus arendajat mõjutada on koostada detailne loetelu konkreetsetest puudustest. Ka siis võib arendaja vastu vaielda ja keelduda tööd täiendamist või ümber tegemast - viidates lepingule, kus neid asju konkreetselt nimetatud ei ole. Kui aga puudused on nii detailselt lahti pudistatud, et nende kõrvaldamine on lihtne mehhaaniline töö, siis arendaja tavaliselt ei viitsi jamada ja viib (vähemalt enamuse) parandustest sisse.&lt;/p&gt;

&lt;p&gt;Puuduste nimekirja koostamiseks kaasab projektijuht asutuse töötajaid. (Projektijuht tavaliselt ei jõua juba puhtfüüsiliselt ise nimekirja kokku panna.) Asutuse töötajate motiveerimine on natuke lihtsam. Tegu on kolleegidega ja kaastöötaja palvele äraütlemine ei lähe kokku asutuse tööeetikaga (ja väärtustega, kui need on sõnastatud). Teiseks on asutuse töötajad motiveeritud sellega, et igaüks tahab ikkagi oma töökohta perspektiivis säilitada.  Samuti pole arendusasutuse töötajatel kombeks käia ringi tööleping näpus, vaieldes, mida nad töölepingu järgi peavad ja ei pea tegema. Arendusorganisatsioonis on loomulik, et tehakse erinevaid asju. Ja vahel teevad asutuse töötajad arenduspartneri tegemata töö üldse ise ära.&lt;/p&gt;

&lt;p&gt;Kõik oleks ilus, kuid selline teise töö ärategemine paraku ei ole jätkusuutlik. Tõtates mitmetesse kohtadesse tulekahjusid kustutama, teiste tööd parandama või ära tegema, lähevad asutuse töötajatel lõpuks enda töölõikudes asjad katki. Või lähevad inimesed ise katki. Arendus ei peaks aga olema selline, kus inimesed katki lähevad.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tuleb ümber teha</title>
      <link>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/post/tuleb-umber-teha/</link>
      <pubDate>Sun, 28 Aug 2016 21:34:41 +0300</pubDate>
      
      <guid>file:///C:/Users/Kasutaja/Desktop/FreshbrewPREPARE/public/post/tuleb-umber-teha/</guid>
      <description>&lt;p&gt;Igasugune ümbertegemine on kulu.
Riigis on ümbertegemine maksumaksja raha viisakalt öeldes ebaotstarbekas kulutamine, otse öeldes raiskamine.
Selle eest tuleks kedagi vangi panna, töölt lahti lasta.&lt;/p&gt;

&lt;p&gt;Tänapäevases IT arenduses ei saa ümbertegemist vältida. Kvaliteetset tulemust ilma selleta ei saavuta.&lt;/p&gt;

&lt;p&gt;Põhjuste avamine käib siin üle jõu. Info paljusus ja samal ajal ebaülevaatlikkus, muutlikkus jms teevad prognoosimise raskeks. Time to market, iterative development, devops on vaid mõned terminid, mis väljendavad - igaüks erineva nurga alt - IT maailmas pikema aja jooksul kujunenud arusaamist ümbertegemiste vältimatusest.&lt;/p&gt;

&lt;p&gt;[Tegelikult peaks infotöötlejale olema teabe teisendamine ühest vormist teise olema igapäevane leib. Sisend -&amp;gt; Teisendus -&amp;gt; Väljund.]&lt;br /&gt;
Tihtigi kohtame aga programmeerijat või analüütikut, kes ei taha oma tööd ümber teha. &amp;ldquo;Ma ju tegin tööd. Miks ma pean ümber tegema?&amp;rdquo; &amp;ldquo;Ma esitasin analüüsi wordis, see on mulle mugav vorming. Miks nõuate nüüd Markdowni panemist?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>